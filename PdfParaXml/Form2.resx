<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gH/+AYB//wGAf//HwP8=
</value>
  </data>
</root>